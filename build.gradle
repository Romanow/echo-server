plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.25"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.0"
    id "org.springframework.boot" version "3.3.3"
    id "io.spring.dependency-management" version "1.1.6"
}

ext {
    springBootVersion = "3.3.3"
    testContainerVersion = "1.20.1"
    testContainersRedisVersion = "2.2.2"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

ktlint {
    version.set("1.1.1")
}

repositories {
    mavenCentral()
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-aop"

    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "io.micrometer:micrometer-tracing-bridge-otel"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "com.redis:testcontainers-redis:$testContainersRedisVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainerVersion"

}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}
